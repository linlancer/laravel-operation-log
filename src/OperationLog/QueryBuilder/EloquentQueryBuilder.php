<?php
/**
 * Created by PhpStorm.
 * User: $_s
 * Date: 2020/5/12
 * Time: 11:28
 */

namespace LinLancer\Laravel\OperationLog\QueryBuilder;


use Illuminate\Database\Eloquent\Builder;
use LinLancer\Laravel\EloquentModel;
use LinLancer\Laravel\OperationLogger;

class EloquentQueryBuilder extends Builder
{
    private $originalGroups = [];

    public function update(array $values)
    {
        $model = $this->getModel();
        if ($model instanceof OperationLogger && $model->exists === false) {
            $models = $this->getModels();
            $this->beforeUpdate($models);
        }
        $result = parent::update($values); // TODO: Change the autogenerated stub
        if ($model instanceof OperationLogger && $model->exists === false) {
            $models = $this->getModels();
            $this->afterUpdate($models);
        }

        return $result;
    }

    public function beforeUpdate(array $models)
    {
        /**
         * @var EloquentModel $model
         */
        foreach ($models as $model) {
            $this->originalGroups[] = $model->getOriginal();
        }
    }

    public function afterUpdate(array $models)
    {
        /**
         * @var EloquentModel $model
         */
        foreach ($models as $k => $model) {
            $model->setOriginal($this->originalGroups[$k]);
            $model = $model->syncChanges();
            $model->fireModelEventFromBuilder('updated');
        }
    }
}